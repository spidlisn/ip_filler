@Library("thor-shared-pipelines") _

pipeline {

  agent {
    label "cdaas-agent-nataas"
  }

  options{
    instanceType('t3.large')
    buildDiscarder(logRotator(numToKeepStr: '30'))
    instanceExecutors('1')
  }

  environment {
    // The ARN for the cross-account role created in CI/CD account
    ROLE_ARN = 'arn:aws:iam::543681704666:role/jenkins-nataas'
    SL_CREDENTIALS_ID = 'sldeploykey_user_pass'
  }

stages {
  stage('Checkout repo') {
    steps {
      dir('opt/ip_filler/') {
        git(
          url: 'https://github.com/spidlisn/ip_filler.git',
          credentialsId: 'cicd/github/cloudsec_nataas_ci_github_cloud_token',
          branch: "main"
        )

      }
    }
  }
  stage('Install the service') {
      steps {
        
          withCredentials([usernamePassword(credentialsId: 'cicd/github/cloudsec_nataas_ci_github_cloud_token', usernameVariable: 'GITHUB_USERNAME', passwordVariable: 'GITHUB_TOKEN')]) {
              dir('opt/ip_filler/') {
                  sh '''
                  python3 -m venv venv
                  . venv/bin/activate
                  pip install -r requirements.txt
                  pip install pipx
                  pipx install git+https://${GITHUB_USERNAME}:${GITHUB_TOKEN}@github.com/spidlisn/ip_filler.git
                  '''
              }
          }
    }
  }

    stage('Run stale-tunnels script') {
            steps {
                 withStreamline(credentialsId: env.SL_CREDENTIALS_ID) {
                    withAWS(role: env.ROLE_ARN){
                      dir('opt/ip_filler/') {
                          sh '''
                          . venv/bin/activate

                          sl aws session generate --account-id 085681790652 --role-name owner --region us-east-1 --profile nataas-dev
                          ip_db_filler --env dev --api_region dev_aws_us-west-2_5 --db_region eu-west-1 --debug
                          '''
                        }
                    }
              }
            }
    }

}
  post {
      always {
          script {
              cleanWs()
          }
      }
  }
}
